/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as DashboardIndexRouteImport } from './routes/_dashboard/index'
import { Route as DashboardQueueRouteImport } from './routes/_dashboard/queue'
import { Route as DashboardDatabaseRouteImport } from './routes/_dashboard/database'

const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardQueueRoute = DashboardQueueRouteImport.update({
  id: '/queue',
  path: '/queue',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDatabaseRoute = DashboardDatabaseRouteImport.update({
  id: '/database',
  path: '/database',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/database': typeof DashboardDatabaseRoute
  '/queue': typeof DashboardQueueRoute
  '/': typeof DashboardIndexRoute
}
export interface FileRoutesByTo {
  '/database': typeof DashboardDatabaseRoute
  '/queue': typeof DashboardQueueRoute
  '/': typeof DashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_dashboard/database': typeof DashboardDatabaseRoute
  '/_dashboard/queue': typeof DashboardQueueRoute
  '/_dashboard/': typeof DashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/database' | '/queue' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/database' | '/queue' | '/'
  id:
    | '__root__'
    | '/_dashboard'
    | '/_dashboard/database'
    | '/_dashboard/queue'
    | '/_dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/queue': {
      id: '/_dashboard/queue'
      path: '/queue'
      fullPath: '/queue'
      preLoaderRoute: typeof DashboardQueueRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/database': {
      id: '/_dashboard/database'
      path: '/database'
      fullPath: '/database'
      preLoaderRoute: typeof DashboardDatabaseRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface DashboardRouteChildren {
  DashboardDatabaseRoute: typeof DashboardDatabaseRoute
  DashboardQueueRoute: typeof DashboardQueueRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDatabaseRoute: DashboardDatabaseRoute,
  DashboardQueueRoute: DashboardQueueRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
